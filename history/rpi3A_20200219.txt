    1  sudo passwd
    2  passwd
    3  sudo rasp-config 
    4  sudo raspi-config 
    5  sudo apt-get update 
    6  sudo apt-get install tightvncserver 
    7  mkdir Share
    8  ls -al
    9  cd ~/Share/ 
   10  sudo reboot now
   11  cd ~/Share/ 
   12  vncserver :1
   13  python 
   14  sudo apt-get install python3.5
   15  python3.5
   16  alias python=python3.5
   17  python
   18  sudo nano ~/.bashrc 
   19  pytwget https://packagecloud.io/headmelted/codebuilds/gpgkey -O - | sudo apt-key add -
   20  wget https://packagecloud.io/headmelted/codebuilds/gpgkey -O - | sudo apt-key add -
   21  curl -L https://code.headmelted.com/installers/apt.sh | sudo bash
   22  top -1 
   23  top -t 1 
   24  top 1
   25  top -d 2
   26  sudo apt-get purge code-oss 
   27  exit
   28  ls -al 
   29  cd ~/Share/
   30  ls -al
   31  df
   32  sudo apt install --listed
   33  sudo apt list --installed 
   34  python
   35  docker 
   36  curl -L google.com
   37  curl -L google.com  > ~/Share/google.html
   38  mail
   39  vncserver :1
   40  exit
   41  mysql
   42  sudo apt-get install mariadb-server
   43  sudo apt-get update
   44  sudo apt-get install mariadb-server 
   45  sudo mysql -u root
   46  mysql -uroot -p
   47  mysql -uboroger -p
   48  use mysql ; update user set plugin='' where User='root' ; flush privileges ; SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   49  create user boroger identified by 'password1!';
   50  grant all on *.* to boroger@'%' with grant option;
   51  mysql -uroot -p
   52  use mysql ; update user set plugin='' where User='root' ; flush privileges ; SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   53  create user boroger identified by 'password1!';
   54  grant all on *.* to boroger@'%' with grant option;
   55  quit; 
   56  sudo mysql -u root
   57  use mysql; 
   58  update user set plugin='' where User='root' ; flush privileges; 
   59  SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   60  create user boroger identified by 'password1!';
   61  grant all on *.* to boroger@'%' with grant option;
   62  use mysql; 
   63  update user set plugin='' where User='root' ; flush privileges; 
   64  SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   65  create user boroger identified by 'password1!';
   66  grant all on *.* to boroger@'%' with grant option;
   67  use mysql; 
   68  update user set plugin='' where User='root' ; flush privileges; 
   69  SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   70  create user boroger identified by 'password1!';
   71  grant all on *.* to boroger@'%' with grant option;
   72  use mysql; 
   73  update user set plugin='' where User='root' ; flush privileges; SET PASSWORD FOR 'root'@'localhost' = PASSWORD('password1!');
   74  create user boroger identified by 'password1!';
   75  grant all on *.* to boroger@'%' with grant option;
   76  mysql -uroot -p 'password1!';
   77  echo password1! | mysql -uroot -p;
   78  echo password1! |xargs mysql -uroot -p;
   79  ssh pi@192.168.1.101
   80  sudo apt-get install mongodb
   81  mongodb
   82  mongod
   83  mongo 
   84  mongoimport --db test --collection collection_test_log --file ~\Share;
   85  mongoimport --db test --collection collection_test_log --file ~\\Share\\test_log.jso
   86  mongoimport --db test --collection collection_test_log --file ~\\Share\\test_log.json
   87  mongoimport --db test --collection collection_test_log --file '/home/pi/Share/test_log.json'
   88  mongo
   89  mongoimport --db test --collection collection_test_log  --file '/home/pi/Share/test_log.json'
   90  mongo
   91  exit
   92  cd /var/log/
   93  ls -al
   94  cd mongodb/
   95  ls -al
   96  tail mongodb.log 
   97  mongoimport --db test --collection collection_test_log --file '~/Share/test_log.json'
   98  mongoimport --db test --collection collection_test_log --file '/home/pi/Share/test_log.json'
   99  docker
  100  lsb_release mongodb.log 
  101  lsb_release
  102  lsb_release -v
  103  lsb_release -a
  104  curl -sSL https://get.docker.com | sh
  105  sudo curl -sSL https://get.docker.com | sh
  106  exit =
  107  upti
  108  uptime 
  109  exit
  110  sudo apt list --installed
  111  exit
  112  ifconfig
  113  history
  114  mongo
  115  python
  116  exit
  117  history
  118  mongodn
  119  mongod
  120  uptime
  121  exit
  122  history
  123  cd ~/Share/ 
  124  ls -al 
  125  history
  126  df
  127  ls ~
  128  ls -al ~
  129  history > rpi3A_20200219.txt
